[{"/home/alex/trello_clone123/front-end/src/index.jsx":"1","/home/alex/trello_clone123/front-end/src/reportWebVitals.js":"2","/home/alex/trello_clone123/front-end/src/App.jsx":"3","/home/alex/trello_clone123/front-end/src/CookiesContext.jsx":"4","/home/alex/trello_clone123/front-end/src/Authorization/AuthPage.jsx":"5","/home/alex/trello_clone123/front-end/src/Board CRUD component/BoardManager.jsx":"6","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/TaskManager.jsx":"7","/home/alex/trello_clone123/front-end/src/Board CRUD component/Board.jsx":"8","/home/alex/trello_clone123/front-end/src/Board CRUD component/AddBoardButton.jsx":"9","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddSectionButton.jsx":"10","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Section.jsx":"11","/home/alex/trello_clone123/front-end/src/Utils/Utils.jsx":"12","/home/alex/trello_clone123/front-end/src/Board CRUD component/DeleteBoardButton.jsx":"13","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Task.jsx":"14","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteSectionButton.jsx":"15","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddTaskButton.jsx":"16","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteTaskButton.jsx":"17","/home/alex/trello_clone123/front-end/src/BoardScreen.jsx":"18","/home/alex/trello_clone123/front-end/src/Teams/TeamManager.jsx":"19","/home/alex/trello_clone123/front-end/src/data.js":"20","/home/alex/trello_clone123/front-end/src/Teams/Team.jsx":"21","/home/alex/trello_clone123/front-end/src/Teams/DeleteTeamButton.jsx":"22","/home/alex/trello_clone123/front-end/src/CurrentTeamContext.jsx":"23","/home/alex/trello_clone123/front-end/src/Authorization/SignUpPage.jsx":"24","/home/alex/trello_clone123/front-end/src/SocketContext.jsx":"25"},{"size":595,"mtime":1619438355070,"results":"26","hashOfConfig":"27"},{"size":364,"mtime":1619438355070,"results":"28","hashOfConfig":"27"},{"size":1086,"mtime":1621003269530,"results":"29","hashOfConfig":"27"},{"size":474,"mtime":1621003004364,"results":"30","hashOfConfig":"27"},{"size":1972,"mtime":1620498265714,"results":"31","hashOfConfig":"27"},{"size":1584,"mtime":1621109422890,"results":"32","hashOfConfig":"27"},{"size":3891,"mtime":1621109422894,"results":"33","hashOfConfig":"27"},{"size":780,"mtime":1621003715277,"results":"34","hashOfConfig":"27"},{"size":2137,"mtime":1621109422886,"results":"35","hashOfConfig":"27"},{"size":1296,"mtime":1621109422894,"results":"36","hashOfConfig":"27"},{"size":2406,"mtime":1620412232659,"results":"37","hashOfConfig":"27"},{"size":275,"mtime":1619438355070,"results":"38","hashOfConfig":"27"},{"size":1988,"mtime":1621109422894,"results":"39","hashOfConfig":"27"},{"size":1257,"mtime":1621108341217,"results":"40","hashOfConfig":"27"},{"size":1529,"mtime":1621109422894,"results":"41","hashOfConfig":"27"},{"size":1168,"mtime":1621109422894,"results":"42","hashOfConfig":"27"},{"size":1466,"mtime":1621109422894,"results":"43","hashOfConfig":"27"},{"size":2976,"mtime":1621109422894,"results":"44","hashOfConfig":"27"},{"size":757,"mtime":1619975860789,"results":"45","hashOfConfig":"27"},{"size":556,"mtime":1619708640024,"results":"46","hashOfConfig":"27"},{"size":1035,"mtime":1621080522789,"results":"47","hashOfConfig":"27"},{"size":384,"mtime":1621080536542,"results":"48","hashOfConfig":"27"},{"size":442,"mtime":1619986943829,"results":"49","hashOfConfig":"27"},{"size":2965,"mtime":1620498265714,"results":"50","hashOfConfig":"27"},{"size":1528,"mtime":1621109422894,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"gd81r",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alex/trello_clone123/front-end/src/index.jsx",[],["107","108","109","110","111","112","113"],"/home/alex/trello_clone123/front-end/src/reportWebVitals.js",[],"/home/alex/trello_clone123/front-end/src/App.jsx",[],"/home/alex/trello_clone123/front-end/src/CookiesContext.jsx",[],"/home/alex/trello_clone123/front-end/src/Authorization/AuthPage.jsx",["114","115"],"import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CookieContext } from \"../CookiesContext\";\n\nconst AuthPage = () => {\n  const [currLogin, setCurrLogin] = useState(null);\n  const [currPassword, setCurrPassword] = useState(null);\n\n  const [cookies, setCookie] = useContext(CookieContext);\n  const history = useHistory();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const url = \"http://localhost:3000/auth/login\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        username: currLogin,\n        password: currPassword,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.access_token) {\n          const JWT = result.access_token;\n          setCookie(\"JWT\", JWT, { path: \"/\" });\n          history.push(\"/boards\");\n        } else {\n          alert(\"Login or password is invalid. Try again.\");\n        }\n      });\n  };\n  const loginChangeHandler = (e) => {\n    setCurrLogin(e.target.value);\n  };\n  const passwordChangeHandler = (e) => {\n    setCurrPassword(e.target.value);\n  };\n  return (\n    <div className=\"AuthPage\">\n      <form onSubmit={submitHandler}>\n        <label htmlFor=\"login\">\n          Login:\n          <input\n            type=\"text\"\n            name=\"login\"\n            id=\"login\"\n            onChange={loginChangeHandler}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password:\n          <input\n            type=\"text\"\n            name=\"password\"\n            id=\"password\"\n            onChange={passwordChangeHandler}\n          />\n        </label>\n        <input type=\"submit\" value=\"Sign in\" />\n      </form>\n      <p>OR</p>\n      <button\n        type=\"button\"\n        onClick={() => {\n          history.push(\"/signup\");\n        }}\n      >\n        Create account\n      </button>\n    </div>\n  );\n};\n\nexport default AuthPage;\n","/home/alex/trello_clone123/front-end/src/Board CRUD component/BoardManager.jsx",["116"],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/TaskManager.jsx",[],"/home/alex/trello_clone123/front-end/src/Board CRUD component/Board.jsx",[],"/home/alex/trello_clone123/front-end/src/Board CRUD component/AddBoardButton.jsx",["117","118"],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddSectionButton.jsx",["119"],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Section.jsx",[],"/home/alex/trello_clone123/front-end/src/Utils/Utils.jsx",[],"/home/alex/trello_clone123/front-end/src/Board CRUD component/DeleteBoardButton.jsx",[],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Task.jsx",[],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteSectionButton.jsx",[],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddTaskButton.jsx",["120"],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteTaskButton.jsx",[],"/home/alex/trello_clone123/front-end/src/BoardScreen.jsx",["121","122","123","124","125","126","127"],"/home/alex/trello_clone123/front-end/src/Teams/TeamManager.jsx",[],"/home/alex/trello_clone123/front-end/src/data.js",[],["128","129","130","131","132","133","134"],"/home/alex/trello_clone123/front-end/src/Teams/Team.jsx",["135"],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport DeleteTeamButton from \"./DeleteTeamButton\";\nimport \"./Team.css\";\nimport { CurrentTeamContext } from \"../CurrentTeamContext\";\n\nconst Team = ({ name, id, setTeams, allBoards, setBoards }) => {\n  const [currTeamID, setCurrTeamID] = useContext(CurrentTeamContext);\n\n  const changeTeam = () => {\n    const newBoards = allBoards.filter((board) => board.team_id === id);\n    setBoards(newBoards);\n    setCurrTeamID(id);\n  };\n\n  return (\n    <div className=\"Team\">\n      <button type=\"button\" onClick={changeTeam}>\n        {name}\n      </button>\n      <Link className=\"Members\" to=\"\">\n        🧍\n      </Link>\n      <DeleteTeamButton id={id} />\n    </div>\n  );\n};\n\nTeam.propTypes = {\n  name: PropTypes.string.isRequired,\n  setTeams: PropTypes.func.isRequired,\n  allBoards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setBoards: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Team;\n","/home/alex/trello_clone123/front-end/src/Teams/DeleteTeamButton.jsx",[],"/home/alex/trello_clone123/front-end/src/CurrentTeamContext.jsx",[],"/home/alex/trello_clone123/front-end/src/Authorization/SignUpPage.jsx",["136","137","138","139","140","141"],"import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CookieContext } from \"../CookiesContext\";\n\nconst SignUpPage = () => {\n  const [currUsername, setCurrUsername] = useState(null);\n  const [currEmail, setCurrEmail] = useState(null);\n  const [currPassword, setCurrPassword] = useState(null);\n  const [currConfPassword, setCurrConfPassword] = useState(null);\n\n  const [cookies, setCookie] = useContext(CookieContext);\n  const history = useHistory();\n\n  const usernameChangeHandler = (e) => {\n    setCurrUsername(e.target.value);\n  };\n\n  const passwordChangeHandler = (e) => {\n    setCurrPassword(e.target.value);\n  };\n  const confPasswordChangeHandler = (e) => {\n    setCurrConfPassword(e.target.value);\n  };\n\n  const emailChangeHandler = (e) => {\n    setCurrEmail(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const pwsAreEquals = currPassword === currConfPassword;\n    if (currUsername && currEmail && currPassword && pwsAreEquals) {\n      const url = \"http://localhost:3000/auth/signup\";\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: currUsername,\n          email: currEmail,\n          password: currPassword,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.error) alert(result.message);\n          else {\n            const JWT = result.access_token;\n            setCookie(\"JWT\", JWT, { path: \"/\" });\n            history.push(\"/boards\");\n          }\n        });\n    } else if (!currUsername) alert(\"Input username\");\n    else if (!currPassword) alert(\"Input password\");\n    else if (!currEmail) alert(\"Input email\");\n    else if (!pwsAreEquals) alert(\"Your passwords are not equal\");\n  };\n\n  return (\n    <div className=\"SignUpPage\">\n      <form onSubmit={submitHandler}>\n        <label htmlFor=\"username\">\n          Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            onChange={usernameChangeHandler}\n          />\n        </label>\n\n        <label htmlFor=\"email\">\n          E-mail:\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"email\"\n            onChange={emailChangeHandler}\n          />\n        </label>\n\n        <label htmlFor=\"password\">\n          Password:\n          <input\n            type=\"text\"\n            name=\"password\"\n            id=\"password\"\n            onChange={passwordChangeHandler}\n          />\n        </label>\n\n        <label htmlFor=\"conf_password\">\n          Confirm password:\n          <input\n            type=\"text\"\n            name=\"conf_password\"\n            id=\"conf_password\"\n            onChange={confPasswordChangeHandler}\n          />\n        </label>\n        <input type=\"submit\" value=\"Sign up\" />\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n","/home/alex/trello_clone123/front-end/src/SocketContext.jsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":9,"column":10,"nodeType":"158","messageId":"159","endLine":9,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":32,"column":11,"nodeType":"162","messageId":"163","endLine":32,"endColumn":60},{"ruleId":"164","severity":1,"message":"165","line":28,"column":6,"nodeType":"166","endLine":28,"endColumn":18,"suggestions":"167"},{"ruleId":"160","severity":1,"message":"168","line":15,"column":21,"nodeType":"162","messageId":"163","endLine":15,"endColumn":60},{"ruleId":"160","severity":1,"message":"168","line":23,"column":19,"nodeType":"162","messageId":"163","endLine":26,"endColumn":8},{"ruleId":"160","severity":1,"message":"168","line":11,"column":25,"nodeType":"162","messageId":"163","endLine":11,"endColumn":68},{"ruleId":"160","severity":1,"message":"168","line":10,"column":22,"nodeType":"162","messageId":"163","endLine":10,"endColumn":42},{"ruleId":"156","severity":1,"message":"169","line":21,"column":10,"nodeType":"158","messageId":"159","endLine":21,"endColumn":20},{"ruleId":"156","severity":1,"message":"170","line":24,"column":9,"nodeType":"158","messageId":"159","endLine":24,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":25,"column":5,"nodeType":"173","messageId":"163","endLine":25,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":31,"column":5,"nodeType":"173","messageId":"163","endLine":31,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":35,"column":5,"nodeType":"173","messageId":"163","endLine":35,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":61,"column":11,"nodeType":"173","messageId":"163","endLine":61,"endColumn":22},{"ruleId":"164","severity":1,"message":"174","line":77,"column":6,"nodeType":"166","endLine":77,"endColumn":19,"suggestions":"175"},{"ruleId":"142","replacedBy":"176"},{"ruleId":"144","replacedBy":"177"},{"ruleId":"146","replacedBy":"178"},{"ruleId":"148","replacedBy":"179"},{"ruleId":"150","replacedBy":"180"},{"ruleId":"152","replacedBy":"181"},{"ruleId":"154","replacedBy":"182"},{"ruleId":"156","severity":1,"message":"169","line":9,"column":10,"nodeType":"158","messageId":"159","endLine":9,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":11,"column":10,"nodeType":"158","messageId":"159","endLine":11,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":47,"column":29,"nodeType":"162","messageId":"163","endLine":47,"endColumn":50},{"ruleId":"160","severity":1,"message":"161","line":54,"column":31,"nodeType":"162","messageId":"163","endLine":54,"endColumn":54},{"ruleId":"160","severity":1,"message":"161","line":55,"column":29,"nodeType":"162","messageId":"163","endLine":55,"endColumn":52},{"ruleId":"160","severity":1,"message":"161","line":56,"column":26,"nodeType":"162","messageId":"163","endLine":56,"endColumn":46},{"ruleId":"160","severity":1,"message":"161","line":57,"column":29,"nodeType":"162","messageId":"163","endLine":57,"endColumn":66},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"lines-around-directive",["185"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'cookies' is assigned a value but never used.","Identifier","unusedVar","no-alert","Unexpected alert.","CallExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allBoards', 'getConnection', 'setAllBoards', 'setBoards', 'subscribeToBoardUpdate', and 'unsubscribeFrom'. Either include them or remove the dependency array.","ArrayExpression",["186"],"Unexpected prompt.","'currTeamID' is assigned a value but never used.","'getTeams' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","React Hook useEffect has a missing dependency: 'setCurrTeamID'. Either include it or remove the dependency array.",["187"],["183"],["184"],["185"],[],[],[],[],"no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [allBoards, currTeamID, getConnection, setAllBoards, setBoards, subscribeToBoardUpdate, unsubscribeFrom]",{"range":"192","text":"193"},"Update the dependencies array to be: [cookies.JWT, setCurrTeamID]",{"range":"194","text":"195"},[923,935],"[allBoards, currTeamID, getConnection, setAllBoards, setBoards, subscribeToBoardUpdate, unsubscribeFrom]",[2431,2444],"[cookies.JWT, setCurrTeamID]"]