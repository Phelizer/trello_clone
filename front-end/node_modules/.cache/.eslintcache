[{"/home/alex/agilis-tabula/front-end/src/index.jsx":"1","/home/alex/agilis-tabula/front-end/src/reportWebVitals.js":"2","/home/alex/agilis-tabula/front-end/src/App.jsx":"3","/home/alex/agilis-tabula/front-end/src/Authorization/AuthPage.jsx":"4","/home/alex/agilis-tabula/front-end/src/Board CRUD component/BoardManager.jsx":"5","/home/alex/agilis-tabula/front-end/src/Sections and cards CRUD component/TaskManager.jsx":"6","/home/alex/agilis-tabula/front-end/src/Board CRUD component/Board.jsx":"7","/home/alex/agilis-tabula/front-end/src/Board CRUD component/AddBoardButton.jsx":"8","/home/alex/agilis-tabula/front-end/src/Sections and cards CRUD component/Section.jsx":"9","/home/alex/agilis-tabula/front-end/src/Sections and cards CRUD component/AddSectionButton.jsx":"10","/home/alex/agilis-tabula/front-end/src/Board CRUD component/DeleteBoardButton.jsx":"11","/home/alex/agilis-tabula/front-end/src/Sections and cards CRUD component/DeleteSectionButton.jsx":"12"},{"size":500,"mtime":1616416491060,"results":"13","hashOfConfig":"14"},{"size":364,"mtime":1615486664791,"results":"15","hashOfConfig":"14"},{"size":615,"mtime":1617710797301,"results":"16","hashOfConfig":"14"},{"size":446,"mtime":1617133177309,"results":"17","hashOfConfig":"14"},{"size":1253,"mtime":1617714023273,"results":"18","hashOfConfig":"14"},{"size":1288,"mtime":1618407616218,"results":"19","hashOfConfig":"14"},{"size":689,"mtime":1617787866017,"results":"20","hashOfConfig":"14"},{"size":1352,"mtime":1617793682732,"results":"21","hashOfConfig":"14"},{"size":747,"mtime":1617978494867,"results":"22","hashOfConfig":"14"},{"size":854,"mtime":1617978453263,"results":"23","hashOfConfig":"14"},{"size":1280,"mtime":1617828033760,"results":"24","hashOfConfig":"14"},{"size":786,"mtime":1617978583595,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"qbnieo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alex/agilis-tabula/front-end/src/index.jsx",[],["53","54","55","56","57","58","59"],"/home/alex/agilis-tabula/front-end/src/reportWebVitals.js",[],"/home/alex/agilis-tabula/front-end/src/App.jsx",[],"/home/alex/agilis-tabula/front-end/src/Authorization/AuthPage.jsx",[],"/home/alex/agilis-tabula/front-end/src/Board CRUD component/BoardManager.jsx",[],"/home/alex/agilis-tabula/front-end/src/Sections and cards CRUD component/TaskManager.jsx",["60","61"],"import { useState } from \"react\";\nimport Section from \"./Section\";\nimport AddSectionButton from \"./AddSectionButton\";\n\nconst TaskManager = () => {\n  const [sections, setSections] = useState([\n    {\n      name: \"Section 1\",\n      id: 0,\n      position: 0,\n    },\n    {\n      name: \"Section 2\",\n      id: 1,\n      position: 1,\n    },\n    {\n      name: \"Section 3\",\n      id: 2,\n      position: 2,\n    },\n  ]);\n\n  const [tasks, setTasks] = useState([\n    {\n      name: \"Task 1\",\n      id: 0,\n      section: 2,\n      priority: 1,\n      timestamp: new Date().getTime(),\n      executorIDArr: [],\n    },\n    {\n      name: \"Task 2\",\n      id: 1,\n      section: 0,\n      priority: 2,\n      timestamp: new Date().getTime(),\n      executorIDArr: [],\n    },\n    {\n      name: \"Task 3\",\n      id: 2,\n      section: 0,\n      priority: 2,\n      timestamp: new Date().getTime(),\n      executorIDArr: [],\n    },\n  ]);\n\n  return (\n    <div className=\"TaskManager\">\n      {sections.map((val) => (\n        <Section\n          key={val.id}\n          sectionName={val.name}\n          sectionID={val.id}\n          sections={sections}\n          setSections={setSections}\n        />\n      ))}\n      <AddSectionButton sections={sections} setSections={setSections} />\n    </div>\n  );\n};\n\nexport default TaskManager;\n","/home/alex/agilis-tabula/front-end/src/Board CRUD component/Board.jsx",[],"/home/alex/agilis-tabula/front-end/src/Board CRUD component/AddBoardButton.jsx",["62","63"],"import PropTypes from \"prop-types\";\nimport \"./AddBoardButton.css\";\n\nfunction AddBoardButton({ boards, setBoards }) {\n  const handleClick = () => {\n    // to be changed:\n    let boardName = prompt(\"Input board name\", \"New board\");\n\n    // if user cancel the prompt, we cancel the handleClick()\n    if (boardName === null) return;\n\n    // if user tries to input an empty name\n    // we ask to redo the name\n    while (boardName === \"\") {\n      boardName = prompt(\n        \"Board name shouldn't be empty. Please, re-enter the board name\",\n        \"New board\"\n      );\n\n      // if user cancel the prompt, we cancel the handleClick()\n      if (boardName === null) return;\n    }\n\n    const url = \"http://localhost:3000/boards\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: boardName,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setBoards(result);\n      });\n\n    // setBoards(updatedState);\n  };\n\n  return (\n    <div className=\"AddBoardButton\">\n      <button type=\"button\" onClick={handleClick}>\n        Add board\n      </button>\n    </div>\n  );\n}\n\nAddBoardButton.propTypes = {\n  boards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setBoards: PropTypes.func.isRequired,\n};\n\nexport default AddBoardButton;\n","/home/alex/agilis-tabula/front-end/src/Sections and cards CRUD component/Section.jsx",[],"/home/alex/agilis-tabula/front-end/src/Sections and cards CRUD component/AddSectionButton.jsx",[],"/home/alex/agilis-tabula/front-end/src/Board CRUD component/DeleteBoardButton.jsx",[],"/home/alex/agilis-tabula/front-end/src/Sections and cards CRUD component/DeleteSectionButton.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":24,"column":10,"nodeType":"80","messageId":"81","endLine":24,"endColumn":15},{"ruleId":"78","severity":1,"message":"82","line":24,"column":17,"nodeType":"80","messageId":"81","endLine":24,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":7,"column":21,"nodeType":"85","messageId":"86","endLine":7,"endColumn":60},{"ruleId":"83","severity":1,"message":"84","line":15,"column":19,"nodeType":"85","messageId":"86","endLine":18,"endColumn":8},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"lines-around-directive",["89"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'tasks' is assigned a value but never used.","Identifier","unusedVar","'setTasks' is assigned a value but never used.","no-alert","Unexpected prompt.","CallExpression","unexpected","no-global-assign","no-unsafe-negation","padding-line-between-statements"]