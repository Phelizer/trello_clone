[{"/home/alex/trello_clone123/front-end/src/index.jsx":"1","/home/alex/trello_clone123/front-end/src/reportWebVitals.js":"2","/home/alex/trello_clone123/front-end/src/App.jsx":"3","/home/alex/trello_clone123/front-end/src/CookiesContext.jsx":"4","/home/alex/trello_clone123/front-end/src/Authorization/AuthPage.jsx":"5","/home/alex/trello_clone123/front-end/src/Board CRUD component/BoardManager.jsx":"6","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/TaskManager.jsx":"7","/home/alex/trello_clone123/front-end/src/Board CRUD component/Board.jsx":"8","/home/alex/trello_clone123/front-end/src/Board CRUD component/AddBoardButton.jsx":"9","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddSectionButton.jsx":"10","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Section.jsx":"11","/home/alex/trello_clone123/front-end/src/Utils/Utils.jsx":"12","/home/alex/trello_clone123/front-end/src/Board CRUD component/DeleteBoardButton.jsx":"13","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Task.jsx":"14","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteSectionButton.jsx":"15","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddTaskButton.jsx":"16","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteTaskButton.jsx":"17","/home/alex/trello_clone123/front-end/src/BoardScreen.jsx":"18","/home/alex/trello_clone123/front-end/src/Teams/TeamManager.jsx":"19","/home/alex/trello_clone123/front-end/src/data.js":"20","/home/alex/trello_clone123/front-end/src/Teams/Team.jsx":"21","/home/alex/trello_clone123/front-end/src/Teams/DeleteTeamButton.jsx":"22","/home/alex/trello_clone123/front-end/src/CurrentTeamContext.jsx":"23","/home/alex/trello_clone123/front-end/src/Authorization/SignUpPage.jsx":"24"},{"size":595,"mtime":1619438355070,"results":"25","hashOfConfig":"26"},{"size":364,"mtime":1619438355070,"results":"27","hashOfConfig":"26"},{"size":965,"mtime":1620498265710,"results":"28","hashOfConfig":"26"},{"size":474,"mtime":1619986644127,"results":"29","hashOfConfig":"26"},{"size":1972,"mtime":1620498265714,"results":"30","hashOfConfig":"26"},{"size":1961,"mtime":1620923826469,"results":"31","hashOfConfig":"26"},{"size":3891,"mtime":1620412230871,"results":"32","hashOfConfig":"26"},{"size":916,"mtime":1620924131217,"results":"33","hashOfConfig":"26"},{"size":2091,"mtime":1620924141165,"results":"34","hashOfConfig":"26"},{"size":1296,"mtime":1619438355070,"results":"35","hashOfConfig":"26"},{"size":2406,"mtime":1620412232659,"results":"36","hashOfConfig":"26"},{"size":275,"mtime":1619438355070,"results":"37","hashOfConfig":"26"},{"size":1977,"mtime":1620924119653,"results":"38","hashOfConfig":"26"},{"size":1257,"mtime":1620409491764,"results":"39","hashOfConfig":"26"},{"size":1529,"mtime":1619438355070,"results":"40","hashOfConfig":"26"},{"size":1168,"mtime":1619438355070,"results":"41","hashOfConfig":"26"},{"size":1466,"mtime":1619438355070,"results":"42","hashOfConfig":"26"},{"size":2720,"mtime":1620924268405,"results":"43","hashOfConfig":"26"},{"size":757,"mtime":1619975860789,"results":"44","hashOfConfig":"26"},{"size":556,"mtime":1619708640024,"results":"45","hashOfConfig":"26"},{"size":1035,"mtime":1620117511165,"results":"46","hashOfConfig":"26"},{"size":384,"mtime":1619983266058,"results":"47","hashOfConfig":"26"},{"size":442,"mtime":1619986943829,"results":"48","hashOfConfig":"26"},{"size":2965,"mtime":1620498265714,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"gd81r",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},"/home/alex/trello_clone123/front-end/src/index.jsx",[],["105","106","107","108","109","110","111"],"/home/alex/trello_clone123/front-end/src/reportWebVitals.js",[],"/home/alex/trello_clone123/front-end/src/App.jsx",[],"/home/alex/trello_clone123/front-end/src/CookiesContext.jsx",[],"/home/alex/trello_clone123/front-end/src/Authorization/AuthPage.jsx",["112","113"],"import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CookieContext } from \"../CookiesContext\";\n\nconst AuthPage = () => {\n  const [currLogin, setCurrLogin] = useState(null);\n  const [currPassword, setCurrPassword] = useState(null);\n\n  const [cookies, setCookie] = useContext(CookieContext);\n  const history = useHistory();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const url = \"http://localhost:3000/auth/login\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        username: currLogin,\n        password: currPassword,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.access_token) {\n          const JWT = result.access_token;\n          setCookie(\"JWT\", JWT, { path: \"/\" });\n          history.push(\"/boards\");\n        } else {\n          alert(\"Login or password is invalid. Try again.\");\n        }\n      });\n  };\n  const loginChangeHandler = (e) => {\n    setCurrLogin(e.target.value);\n  };\n  const passwordChangeHandler = (e) => {\n    setCurrPassword(e.target.value);\n  };\n  return (\n    <div className=\"AuthPage\">\n      <form onSubmit={submitHandler}>\n        <label htmlFor=\"login\">\n          Login:\n          <input\n            type=\"text\"\n            name=\"login\"\n            id=\"login\"\n            onChange={loginChangeHandler}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password:\n          <input\n            type=\"text\"\n            name=\"password\"\n            id=\"password\"\n            onChange={passwordChangeHandler}\n          />\n        </label>\n        <input type=\"submit\" value=\"Sign in\" />\n      </form>\n      <p>OR</p>\n      <button\n        type=\"button\"\n        onClick={() => {\n          history.push(\"/signup\");\n        }}\n      >\n        Create account\n      </button>\n    </div>\n  );\n};\n\nexport default AuthPage;\n","/home/alex/trello_clone123/front-end/src/Board CRUD component/BoardManager.jsx",["114"],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/TaskManager.jsx",[],"/home/alex/trello_clone123/front-end/src/Board CRUD component/Board.jsx",[],"/home/alex/trello_clone123/front-end/src/Board CRUD component/AddBoardButton.jsx",["115","116","117"],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddSectionButton.jsx",["118"],"import PropTypes from \"prop-types\";\n// import \"./AddSectionButton.css\";\nimport { useContext } from \"react\";\nimport { getPath } from \"../Utils/Utils\";\nimport { CookieContext } from \"../CookiesContext\";\n\nfunction AddSectionButton({ setSections }) {\n  const [cookies] = useContext(CookieContext);\n\n  const handleClick = () => {\n    const sectionName = prompt(\"Input section name\", \"New section\");\n\n    // get array of path elements\n    const path = getPath(window);\n\n    const url = `http://localhost:3000/board/${path[0]}`;\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: sectionName,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${cookies.JWT}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setSections(result);\n      });\n  };\n\n  return (\n    <div className=\"AddSectionButton\">\n      <button type=\"button\" onClick={handleClick}>\n        Add section\n      </button>\n    </div>\n  );\n}\n\nAddSectionButton.propTypes = {\n  /* sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.number,\n      position: PropTypes.number,\n    })\n  ).isRequired, */\n  setSections: PropTypes.func.isRequired,\n};\n\nexport default AddSectionButton;\n","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Section.jsx",[],"/home/alex/trello_clone123/front-end/src/Utils/Utils.jsx",[],"/home/alex/trello_clone123/front-end/src/Board CRUD component/DeleteBoardButton.jsx",["119"],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Task.jsx",[],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteSectionButton.jsx",[],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddTaskButton.jsx",["120"],"import PropTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport { getPath } from \"../Utils/Utils\";\nimport { CookieContext } from \"../CookiesContext\";\n\nconst AddTaskButton = ({ setTasks, sectionID }) => {\n  const [cookies] = useContext(CookieContext);\n\n  const handleClick = () => {\n    const taskName = prompt(\"Input task\");\n\n    // get array of path elements\n    const path = getPath(window);\n\n    const url = `http://localhost:3000/task/${path[0]}/${sectionID}`;\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: taskName,\n        priority: 0,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${cookies.JWT}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setTasks(result);\n      });\n  };\n\n  return (\n    <div className=\"AddTaskButton\">\n      <button type=\"button\" onClick={handleClick}>\n        Add task\n      </button>\n    </div>\n  );\n};\n\nAddTaskButton.propTypes = {\n  sectionID: PropTypes.number.isRequired,\n  setTasks: PropTypes.func.isRequired,\n  //   setTasks: PropTypes.func.isRequired,\n};\n\nexport default AddTaskButton;\n","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteTaskButton.jsx",[],"/home/alex/trello_clone123/front-end/src/BoardScreen.jsx",["121","122"],"/home/alex/trello_clone123/front-end/src/Teams/TeamManager.jsx",[],"/home/alex/trello_clone123/front-end/src/data.js",[],["123","124","125","126","127","128","129"],"/home/alex/trello_clone123/front-end/src/Teams/Team.jsx",["130"],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport DeleteTeamButton from \"./DeleteTeamButton\";\nimport \"./Team.css\";\nimport { CurrentTeamContext } from \"../CurrentTeamContext\";\n\nconst Team = ({ name, id, setTeams, allBoards, setBoards }) => {\n  const [currTeamID, setCurrTeamID] = useContext(CurrentTeamContext);\n\n  const changeTeam = () => {\n    const newBoards = allBoards.filter((board) => board.team_id === id);\n    setBoards(newBoards);\n    setCurrTeamID(id);\n  };\n\n  return (\n    <div className=\"Team\">\n      <button type=\"button\" onClick={changeTeam}>\n        {name}\n      </button>\n      <Link className=\"Members\" to=\"\">\n        🧍\n      </Link>\n      <DeleteTeamButton id={id} />\n    </div>\n  );\n};\n\nTeam.propTypes = {\n  name: PropTypes.string.isRequired,\n  setTeams: PropTypes.func.isRequired,\n  allBoards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setBoards: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Team;\n","/home/alex/trello_clone123/front-end/src/Teams/DeleteTeamButton.jsx",[],"/home/alex/trello_clone123/front-end/src/CurrentTeamContext.jsx",[],"/home/alex/trello_clone123/front-end/src/Authorization/SignUpPage.jsx",["131","132","133","134","135","136"],"import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CookieContext } from \"../CookiesContext\";\n\nconst SignUpPage = () => {\n  const [currUsername, setCurrUsername] = useState(null);\n  const [currEmail, setCurrEmail] = useState(null);\n  const [currPassword, setCurrPassword] = useState(null);\n  const [currConfPassword, setCurrConfPassword] = useState(null);\n\n  const [cookies, setCookie] = useContext(CookieContext);\n  const history = useHistory();\n\n  const usernameChangeHandler = (e) => {\n    setCurrUsername(e.target.value);\n  };\n\n  const passwordChangeHandler = (e) => {\n    setCurrPassword(e.target.value);\n  };\n  const confPasswordChangeHandler = (e) => {\n    setCurrConfPassword(e.target.value);\n  };\n\n  const emailChangeHandler = (e) => {\n    setCurrEmail(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const pwsAreEquals = currPassword === currConfPassword;\n    if (currUsername && currEmail && currPassword && pwsAreEquals) {\n      const url = \"http://localhost:3000/auth/signup\";\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: currUsername,\n          email: currEmail,\n          password: currPassword,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.error) alert(result.message);\n          else {\n            const JWT = result.access_token;\n            setCookie(\"JWT\", JWT, { path: \"/\" });\n            history.push(\"/boards\");\n          }\n        });\n    } else if (!currUsername) alert(\"Input username\");\n    else if (!currPassword) alert(\"Input password\");\n    else if (!currEmail) alert(\"Input email\");\n    else if (!pwsAreEquals) alert(\"Your passwords are not equal\");\n  };\n\n  return (\n    <div className=\"SignUpPage\">\n      <form onSubmit={submitHandler}>\n        <label htmlFor=\"username\">\n          Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            onChange={usernameChangeHandler}\n          />\n        </label>\n\n        <label htmlFor=\"email\">\n          E-mail:\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"email\"\n            onChange={emailChangeHandler}\n          />\n        </label>\n\n        <label htmlFor=\"password\">\n          Password:\n          <input\n            type=\"text\"\n            name=\"password\"\n            id=\"password\"\n            onChange={passwordChangeHandler}\n          />\n        </label>\n\n        <label htmlFor=\"conf_password\">\n          Confirm password:\n          <input\n            type=\"text\"\n            name=\"conf_password\"\n            id=\"conf_password\"\n            onChange={confPasswordChangeHandler}\n          />\n        </label>\n        <input type=\"submit\" value=\"Sign up\" />\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":9,"column":10,"nodeType":"153","messageId":"154","endLine":9,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":32,"column":11,"nodeType":"157","messageId":"158","endLine":32,"endColumn":60},{"ruleId":"159","severity":1,"message":"160","line":38,"column":6,"nodeType":"161","endLine":38,"endColumn":18,"suggestions":"162"},{"ruleId":"151","severity":1,"message":"163","line":1,"column":21,"nodeType":"153","messageId":"154","endLine":1,"endColumn":24},{"ruleId":"155","severity":1,"message":"164","line":12,"column":21,"nodeType":"157","messageId":"158","endLine":12,"endColumn":60},{"ruleId":"155","severity":1,"message":"164","line":20,"column":19,"nodeType":"157","messageId":"158","endLine":23,"endColumn":8},{"ruleId":"155","severity":1,"message":"164","line":11,"column":25,"nodeType":"157","messageId":"158","endLine":11,"endColumn":68},{"ruleId":"165","severity":1,"message":"166","line":30,"column":11,"nodeType":"167","messageId":"158","endLine":30,"endColumn":22},{"ruleId":"155","severity":1,"message":"164","line":10,"column":22,"nodeType":"157","messageId":"158","endLine":10,"endColumn":42},{"ruleId":"151","severity":1,"message":"168","line":23,"column":10,"nodeType":"153","messageId":"154","endLine":23,"endColumn":20},{"ruleId":"159","severity":1,"message":"169","line":73,"column":6,"nodeType":"161","endLine":73,"endColumn":19,"suggestions":"170"},{"ruleId":"137","replacedBy":"171"},{"ruleId":"139","replacedBy":"172"},{"ruleId":"141","replacedBy":"173"},{"ruleId":"143","replacedBy":"174"},{"ruleId":"145","replacedBy":"175"},{"ruleId":"147","replacedBy":"176"},{"ruleId":"149","replacedBy":"177"},{"ruleId":"151","severity":1,"message":"168","line":9,"column":10,"nodeType":"153","messageId":"154","endLine":9,"endColumn":20},{"ruleId":"151","severity":1,"message":"152","line":11,"column":10,"nodeType":"153","messageId":"154","endLine":11,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":47,"column":29,"nodeType":"157","messageId":"158","endLine":47,"endColumn":50},{"ruleId":"155","severity":1,"message":"156","line":54,"column":31,"nodeType":"157","messageId":"158","endLine":54,"endColumn":54},{"ruleId":"155","severity":1,"message":"156","line":55,"column":29,"nodeType":"157","messageId":"158","endLine":55,"endColumn":52},{"ruleId":"155","severity":1,"message":"156","line":56,"column":26,"nodeType":"157","messageId":"158","endLine":56,"endColumn":46},{"ruleId":"155","severity":1,"message":"156","line":57,"column":29,"nodeType":"157","messageId":"158","endLine":57,"endColumn":66},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"lines-around-directive",["180"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'cookies' is assigned a value but never used.","Identifier","unusedVar","no-alert","Unexpected alert.","CallExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allBoards', 'setAllBoards', and 'setBoards'. Either include them or remove the dependency array. If 'setAllBoards' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["181"],"'any' is defined but never used.","Unexpected prompt.","no-console","Unexpected console statement.","MemberExpression","'currTeamID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCurrTeamID'. Either include it or remove the dependency array.",["182"],["178"],["179"],["180"],[],[],[],[],"no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [allBoards, currTeamID, setAllBoards, setBoards]",{"range":"187","text":"188"},"Update the dependencies array to be: [cookies.JWT, setCurrTeamID]",{"range":"189","text":"190"},[1228,1240],"[allBoards, currTeamID, setAllBoards, setBoards]",[2175,2188],"[cookies.JWT, setCurrTeamID]"]