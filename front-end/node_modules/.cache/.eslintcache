[{"/home/alex/trello_clone123/front-end/src/index.jsx":"1","/home/alex/trello_clone123/front-end/src/reportWebVitals.js":"2","/home/alex/trello_clone123/front-end/src/App.jsx":"3","/home/alex/trello_clone123/front-end/src/CookiesContext.jsx":"4","/home/alex/trello_clone123/front-end/src/Authorization/AuthPage.jsx":"5","/home/alex/trello_clone123/front-end/src/Board CRUD component/BoardManager.jsx":"6","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/TaskManager.jsx":"7","/home/alex/trello_clone123/front-end/src/Board CRUD component/Board.jsx":"8","/home/alex/trello_clone123/front-end/src/Board CRUD component/AddBoardButton.jsx":"9","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddSectionButton.jsx":"10","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Section.jsx":"11","/home/alex/trello_clone123/front-end/src/Utils/Utils.jsx":"12","/home/alex/trello_clone123/front-end/src/Board CRUD component/DeleteBoardButton.jsx":"13","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Task.jsx":"14","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteSectionButton.jsx":"15","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddTaskButton.jsx":"16","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteTaskButton.jsx":"17","/home/alex/trello_clone123/front-end/src/BoardScreen.jsx":"18","/home/alex/trello_clone123/front-end/src/Teams/TeamManager.jsx":"19","/home/alex/trello_clone123/front-end/src/data.js":"20","/home/alex/trello_clone123/front-end/src/Teams/Team.jsx":"21","/home/alex/trello_clone123/front-end/src/Teams/DeleteTeamButton.jsx":"22","/home/alex/trello_clone123/front-end/src/CurrentTeamContext.jsx":"23","/home/alex/trello_clone123/front-end/src/Authorization/SignUpPage.jsx":"24"},{"size":595,"mtime":1619438355070,"results":"25","hashOfConfig":"26"},{"size":364,"mtime":1619438355070,"results":"27","hashOfConfig":"26"},{"size":965,"mtime":1620497790160,"results":"28","hashOfConfig":"26"},{"size":474,"mtime":1619986644127,"results":"29","hashOfConfig":"26"},{"size":1972,"mtime":1620497790160,"results":"30","hashOfConfig":"26"},{"size":719,"mtime":1620496903915,"results":"31","hashOfConfig":"26"},{"size":3891,"mtime":1620412230871,"results":"32","hashOfConfig":"26"},{"size":780,"mtime":1620133764343,"results":"33","hashOfConfig":"26"},{"size":1943,"mtime":1620497790160,"results":"34","hashOfConfig":"26"},{"size":1296,"mtime":1619438355070,"results":"35","hashOfConfig":"26"},{"size":2406,"mtime":1620412232659,"results":"36","hashOfConfig":"26"},{"size":275,"mtime":1619438355070,"results":"37","hashOfConfig":"26"},{"size":1828,"mtime":1620133659629,"results":"38","hashOfConfig":"26"},{"size":1257,"mtime":1620409491764,"results":"39","hashOfConfig":"26"},{"size":1529,"mtime":1619438355070,"results":"40","hashOfConfig":"26"},{"size":1168,"mtime":1619438355070,"results":"41","hashOfConfig":"26"},{"size":1466,"mtime":1619438355070,"results":"42","hashOfConfig":"26"},{"size":2669,"mtime":1620497790160,"results":"43","hashOfConfig":"26"},{"size":757,"mtime":1619975860789,"results":"44","hashOfConfig":"26"},{"size":556,"mtime":1619708640024,"results":"45","hashOfConfig":"26"},{"size":1035,"mtime":1620117511165,"results":"46","hashOfConfig":"26"},{"size":384,"mtime":1619983266058,"results":"47","hashOfConfig":"26"},{"size":442,"mtime":1619986943829,"results":"48","hashOfConfig":"26"},{"size":2965,"mtime":1620497790160,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"gd81r",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alex/trello_clone123/front-end/src/index.jsx",[],["104","105","106","107","108","109","110"],"/home/alex/trello_clone123/front-end/src/reportWebVitals.js",[],"/home/alex/trello_clone123/front-end/src/App.jsx",[],"/home/alex/trello_clone123/front-end/src/CookiesContext.jsx",[],"/home/alex/trello_clone123/front-end/src/Authorization/AuthPage.jsx",["111","112"],"/home/alex/trello_clone123/front-end/src/Board CRUD component/BoardManager.jsx",[],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/TaskManager.jsx",[],"/home/alex/trello_clone123/front-end/src/Board CRUD component/Board.jsx",[],"/home/alex/trello_clone123/front-end/src/Board CRUD component/AddBoardButton.jsx",["113","114"],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddSectionButton.jsx",["115"],"import PropTypes from \"prop-types\";\n// import \"./AddSectionButton.css\";\nimport { useContext } from \"react\";\nimport { getPath } from \"../Utils/Utils\";\nimport { CookieContext } from \"../CookiesContext\";\n\nfunction AddSectionButton({ setSections }) {\n  const [cookies] = useContext(CookieContext);\n\n  const handleClick = () => {\n    const sectionName = prompt(\"Input section name\", \"New section\");\n\n    // get array of path elements\n    const path = getPath(window);\n\n    const url = `http://localhost:3000/board/${path[0]}`;\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: sectionName,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${cookies.JWT}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setSections(result);\n      });\n  };\n\n  return (\n    <div className=\"AddSectionButton\">\n      <button type=\"button\" onClick={handleClick}>\n        Add section\n      </button>\n    </div>\n  );\n}\n\nAddSectionButton.propTypes = {\n  /* sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.number,\n      position: PropTypes.number,\n    })\n  ).isRequired, */\n  setSections: PropTypes.func.isRequired,\n};\n\nexport default AddSectionButton;\n","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Section.jsx",[],"/home/alex/trello_clone123/front-end/src/Utils/Utils.jsx",[],"/home/alex/trello_clone123/front-end/src/Board CRUD component/DeleteBoardButton.jsx",["116"],"import PropTypes from \"prop-types\";\nimport \"./DeleteBoardButton.css\";\nimport { useContext } from \"react\";\nimport { CookieContext } from \"../CookiesContext\";\nimport { CurrentTeamContext } from \"../CurrentTeamContext\";\n\nfunction DeleteBoardButton({ boardID, boards, setBoards, setAllBoards }) {\n  const [cookies] = useContext(CookieContext);\n  const [currTeamID] = useContext(CurrentTeamContext);\n\n  const handleClick = () => {\n    const url = `http://localhost:3000/boards/${boardID}`;\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${cookies.JWT}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.error) {\n          // if there is already no board with that id on server side\n          // than we simply delete it from client's state\n          console.log(\"Error\");\n          const updatedState = boards.filter((board) => board.id !== boardID);\n          setBoards(updatedState);\n          return;\n        }\n        // if everything is ok and there is a board\n        // that we want to remove on server side\n        // than we set new state to BoardManager with\n        // all the rest boards\n        setAllBoards(result);\n        const newBoards = result.filter(\n          (board) => board.team_id === currTeamID\n        );\n        setBoards(newBoards);\n      });\n    // TODO: fetch error handling to be done\n  };\n  return (\n    <div className=\"DeleteBoardButton\">\n      <button type=\"button\" className=\"DeleteButton\" onClick={handleClick}>\n        ×\n      </button>\n    </div>\n  );\n}\n\nDeleteBoardButton.propTypes = {\n  boardID: PropTypes.number.isRequired,\n  boards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setBoards: PropTypes.func.isRequired,\n  setAllBoards: PropTypes.func.isRequired,\n};\n\nexport default DeleteBoardButton;\n","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/Task.jsx",[],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteSectionButton.jsx",[],"/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/AddTaskButton.jsx",["117"],"import PropTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport { getPath } from \"../Utils/Utils\";\nimport { CookieContext } from \"../CookiesContext\";\n\nconst AddTaskButton = ({ setTasks, sectionID }) => {\n  const [cookies] = useContext(CookieContext);\n\n  const handleClick = () => {\n    const taskName = prompt(\"Input task\");\n\n    // get array of path elements\n    const path = getPath(window);\n\n    const url = `http://localhost:3000/task/${path[0]}/${sectionID}`;\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: taskName,\n        priority: 0,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${cookies.JWT}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setTasks(result);\n      });\n  };\n\n  return (\n    <div className=\"AddTaskButton\">\n      <button type=\"button\" onClick={handleClick}>\n        Add task\n      </button>\n    </div>\n  );\n};\n\nAddTaskButton.propTypes = {\n  sectionID: PropTypes.number.isRequired,\n  setTasks: PropTypes.func.isRequired,\n  //   setTasks: PropTypes.func.isRequired,\n};\n\nexport default AddTaskButton;\n","/home/alex/trello_clone123/front-end/src/Sections and cards CRUD component/DeleteTaskButton.jsx",[],"/home/alex/trello_clone123/front-end/src/BoardScreen.jsx",["118","119"],"/home/alex/trello_clone123/front-end/src/Teams/TeamManager.jsx",[],"/home/alex/trello_clone123/front-end/src/data.js",[],["120","121","122","123","124","125","126"],"/home/alex/trello_clone123/front-end/src/Teams/Team.jsx",["127"],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport DeleteTeamButton from \"./DeleteTeamButton\";\nimport \"./Team.css\";\nimport { CurrentTeamContext } from \"../CurrentTeamContext\";\n\nconst Team = ({ name, id, setTeams, allBoards, setBoards }) => {\n  const [currTeamID, setCurrTeamID] = useContext(CurrentTeamContext);\n\n  const changeTeam = () => {\n    const newBoards = allBoards.filter((board) => board.team_id === id);\n    setBoards(newBoards);\n    setCurrTeamID(id);\n  };\n\n  return (\n    <div className=\"Team\">\n      <button type=\"button\" onClick={changeTeam}>\n        {name}\n      </button>\n      <Link className=\"Members\" to=\"\">\n        🧍\n      </Link>\n      <DeleteTeamButton id={id} />\n    </div>\n  );\n};\n\nTeam.propTypes = {\n  name: PropTypes.string.isRequired,\n  setTeams: PropTypes.func.isRequired,\n  allBoards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setBoards: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Team;\n","/home/alex/trello_clone123/front-end/src/Teams/DeleteTeamButton.jsx",[],"/home/alex/trello_clone123/front-end/src/CurrentTeamContext.jsx",[],"/home/alex/trello_clone123/front-end/src/Authorization/SignUpPage.jsx",["128","129","130","131","132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":32,"column":11,"nodeType":"154","messageId":"155","endLine":32,"endColumn":60},{"ruleId":"152","severity":1,"message":"156","line":12,"column":21,"nodeType":"154","messageId":"155","endLine":12,"endColumn":60},{"ruleId":"152","severity":1,"message":"156","line":20,"column":19,"nodeType":"154","messageId":"155","endLine":23,"endColumn":8},{"ruleId":"152","severity":1,"message":"156","line":11,"column":25,"nodeType":"154","messageId":"155","endLine":11,"endColumn":68},{"ruleId":"157","severity":1,"message":"158","line":24,"column":11,"nodeType":"159","messageId":"155","endLine":24,"endColumn":22},{"ruleId":"152","severity":1,"message":"156","line":10,"column":22,"nodeType":"154","messageId":"155","endLine":10,"endColumn":42},{"ruleId":"148","severity":1,"message":"160","line":20,"column":10,"nodeType":"150","messageId":"151","endLine":20,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":69,"column":6,"nodeType":"163","endLine":69,"endColumn":19,"suggestions":"164"},{"ruleId":"134","replacedBy":"165"},{"ruleId":"136","replacedBy":"166"},{"ruleId":"138","replacedBy":"167"},{"ruleId":"140","replacedBy":"168"},{"ruleId":"142","replacedBy":"169"},{"ruleId":"144","replacedBy":"170"},{"ruleId":"146","replacedBy":"171"},{"ruleId":"148","severity":1,"message":"160","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":11,"column":10,"nodeType":"150","messageId":"151","endLine":11,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":47,"column":29,"nodeType":"154","messageId":"155","endLine":47,"endColumn":50},{"ruleId":"152","severity":1,"message":"153","line":54,"column":31,"nodeType":"154","messageId":"155","endLine":54,"endColumn":54},{"ruleId":"152","severity":1,"message":"153","line":55,"column":29,"nodeType":"154","messageId":"155","endLine":55,"endColumn":52},{"ruleId":"152","severity":1,"message":"153","line":56,"column":26,"nodeType":"154","messageId":"155","endLine":56,"endColumn":46},{"ruleId":"152","severity":1,"message":"153","line":57,"column":29,"nodeType":"154","messageId":"155","endLine":57,"endColumn":66},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"lines-around-directive",["174"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'cookies' is assigned a value but never used.","Identifier","unusedVar","no-alert","Unexpected alert.","CallExpression","unexpected","Unexpected prompt.","no-console","Unexpected console statement.","MemberExpression","'currTeamID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrTeamID'. Either include it or remove the dependency array.","ArrayExpression",["175"],["172"],["173"],["174"],[],[],[],[],"no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"176","fix":"177"},"Update the dependencies array to be: [cookies.JWT, setCurrTeamID]",{"range":"178","text":"179"},[2154,2167],"[cookies.JWT, setCurrTeamID]"]