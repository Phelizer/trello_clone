{"ast":null,"code":"var _jsxFileName = \"/home/alex/agilis-tabula/src/Sections and cards CRUD component/AddSectionButton.jsx\";\nimport PropTypes from \"prop-types\"; // import \"./AddSectionButton.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddSectionButton({\n  sections,\n  setSections\n}) {\n  const handleClick = () => {\n    const newObject = {\n      name: \"added section\",\n      id: // random id\n      Math.floor(Math.random() * (Number.MAX_VALUE - 0)) + 0,\n      position: 0\n    };\n    const updatedState = [...sections, newObject];\n    setSections(updatedState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddSectionButton\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      children: \"Add section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AddSectionButton;\nAddSectionButton.propTypes = {\n  sections: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setSections: PropTypes.func.isRequired\n};\nexport default AddSectionButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSectionButton\");","map":{"version":3,"sources":["/home/alex/agilis-tabula/src/Sections and cards CRUD component/AddSectionButton.jsx"],"names":["PropTypes","AddSectionButton","sections","setSections","handleClick","newObject","name","id","Math","floor","random","Number","MAX_VALUE","position","updatedState","propTypes","arrayOf","object","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAA1B,EAAqD;AACnD,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,SAAS,GAAG;AAChBC,MAAAA,IAAI,EAAE,eADU;AAEhBC,MAAAA,EAAE,EACA;AACAC,MAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBC,MAAM,CAACC,SAAP,GAAmB,CAApC,CAAX,IAAqD,CAJvC;AAKhBC,MAAAA,QAAQ,EAAE;AALM,KAAlB;AAOA,UAAMC,YAAY,GAAG,CAAC,GAAGZ,QAAJ,EAAcG,SAAd,CAArB;AAEAF,IAAAA,WAAW,CAACW,YAAD,CAAX;AACD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEV,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KArBQH,gB;AAuBTA,gBAAgB,CAACc,SAAjB,GAA6B;AAC3Bb,EAAAA,QAAQ,EAAEF,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,MAA5B,EAAoCC,UADnB;AAE3Bf,EAAAA,WAAW,EAAEH,SAAS,CAACmB,IAAV,CAAeD;AAFD,CAA7B;AAKA,eAAejB,gBAAf","sourcesContent":["import PropTypes from \"prop-types\";\n// import \"./AddSectionButton.css\";\n\nfunction AddSectionButton({ sections, setSections }) {\n  const handleClick = () => {\n    const newObject = {\n      name: \"added section\",\n      id:\n        // random id\n        Math.floor(Math.random() * (Number.MAX_VALUE - 0)) + 0,\n      position: 0,\n    };\n    const updatedState = [...sections, newObject];\n\n    setSections(updatedState);\n  };\n\n  return (\n    <div className=\"AddSectionButton\">\n      <button type=\"button\" onClick={handleClick}>\n        Add section\n      </button>\n    </div>\n  );\n}\n\nAddSectionButton.propTypes = {\n  sections: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setSections: PropTypes.func.isRequired,\n};\n\nexport default AddSectionButton;\n"]},"metadata":{},"sourceType":"module"}