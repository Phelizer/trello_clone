{"ast":null,"code":"var _jsxFileName = \"/home/alex/agilis-tabula/src/Board CRUD component/AddBoardButton.jsx\";\nimport PropTypes, { number } from \"prop-types\";\nimport \"./AddBoardButton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddBoardButton({\n  boards,\n  setBoards\n}) {\n  const handleClick = () => {\n    const newObject = {\n      name: \"added board\",\n      id: // random id\n      Math.floor(Math.random() * (Number.MAX_VALUE - 0)) + 0,\n      position: 0\n    };\n    const updatedState = [...boards, newObject];\n    setBoards(updatedState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddBoardButton\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      children: \"Add board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AddBoardButton;\nAddBoardButton.propTypes = {\n  boards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setBoards: PropTypes.func.isRequired\n};\nexport default AddBoardButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBoardButton\");","map":{"version":3,"sources":["/home/alex/agilis-tabula/src/Board CRUD component/AddBoardButton.jsx"],"names":["PropTypes","number","AddBoardButton","boards","setBoards","handleClick","newObject","name","id","Math","floor","random","Number","MAX_VALUE","position","updatedState","propTypes","arrayOf","object","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,IAAoBC,MAApB,QAAkC,YAAlC;AACA,OAAO,sBAAP;;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAxB,EAA+C;AAC7C,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,SAAS,GAAG;AAChBC,MAAAA,IAAI,EAAE,aADU;AAEhBC,MAAAA,EAAE,EACA;AACAC,MAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBC,MAAM,CAACC,SAAP,GAAmB,CAApC,CAAX,IAAqD,CAJvC;AAKhBC,MAAAA,QAAQ,EAAE;AALM,KAAlB;AAOA,UAAMC,YAAY,GAAG,CAAC,GAAGZ,MAAJ,EAAYG,SAAZ,CAArB;AAEAF,IAAAA,SAAS,CAACW,YAAD,CAAT;AACD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEV,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KArBQH,c;AAuBTA,cAAc,CAACc,SAAf,GAA2B;AACzBb,EAAAA,MAAM,EAAEH,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,MAA5B,EAAoCC,UADnB;AAEzBf,EAAAA,SAAS,EAAEJ,SAAS,CAACoB,IAAV,CAAeD;AAFD,CAA3B;AAKA,eAAejB,cAAf","sourcesContent":["import PropTypes, { number } from \"prop-types\";\nimport \"./AddBoardButton.css\";\n\nfunction AddBoardButton({ boards, setBoards }) {\n  const handleClick = () => {\n    const newObject = {\n      name: \"added board\",\n      id:\n        // random id\n        Math.floor(Math.random() * (Number.MAX_VALUE - 0)) + 0,\n      position: 0,\n    };\n    const updatedState = [...boards, newObject];\n\n    setBoards(updatedState);\n  };\n\n  return (\n    <div className=\"AddBoardButton\">\n      <button type=\"button\" onClick={handleClick}>\n        Add board\n      </button>\n    </div>\n  );\n}\n\nAddBoardButton.propTypes = {\n  boards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setBoards: PropTypes.func.isRequired,\n};\n\nexport default AddBoardButton;\n"]},"metadata":{},"sourceType":"module"}