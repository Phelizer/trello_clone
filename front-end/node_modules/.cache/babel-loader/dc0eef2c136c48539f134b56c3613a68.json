{"ast":null,"code":"var _jsxFileName = \"/home/alex/agilis-tabula/src/Sections and cards CRUD component/TaskManager.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Section from \"./Section\";\nimport AddSectionButton from \"./AddSectionButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskManager = () => {\n  _s();\n\n  const [sections, setSections] = useState({\n    sectionArr: [{\n      name: \"Section 1\",\n      id: 0,\n      position: 0\n    }, {\n      name: \"Section 2\",\n      id: 1,\n      position: 1\n    }, {\n      name: \"Section 3\",\n      id: 2,\n      position: 2\n    }],\n    taskArr: [{\n      name: \"Task 1\",\n      id: 0,\n      section: 2,\n      priority: 1,\n      timestamp: new Date().getTime(),\n      executorIDArr: []\n    }, {\n      name: \"Task 2\",\n      id: 1,\n      section: 0,\n      priority: 2,\n      timestamp: new Date().getTime(),\n      executorIDArr: []\n    }, {\n      name: \"Task 3\",\n      id: 2,\n      section: 0,\n      priority: 2,\n      timestamp: new Date().getTime(),\n      executorIDArr: []\n    }]\n  });\n  console.log(\"Sections is\", sections);\n  console.log(\"Type: \", typeof section);\n  console.log(sections.sectionArr);\n  console.log(sections.sectionArr.map);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskManager\",\n    children: [sections.sectionArr.map(val => /*#__PURE__*/_jsxDEV(Section, {\n      sectionName: val.name\n    }, val.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(AddSectionButton, {\n      sections: sections,\n      setSections: setSections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskManager, \"qiPqMC63NEap9seE13cX73PwfEo=\");\n\n_c = TaskManager;\nexport default TaskManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"sources":["/home/alex/agilis-tabula/src/Sections and cards CRUD component/TaskManager.jsx"],"names":["useState","Section","AddSectionButton","TaskManager","sections","setSections","sectionArr","name","id","position","taskArr","section","priority","timestamp","Date","getTime","executorIDArr","console","log","map","val"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACvCM,IAAAA,UAAU,EAAE,CACV;AACEC,MAAAA,IAAI,EAAE,WADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KADU,EAMV;AACEF,MAAAA,IAAI,EAAE,WADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KANU,EAWV;AACEF,MAAAA,IAAI,EAAE,WADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAXU,CAD2B;AAmBvCC,IAAAA,OAAO,EAAE,CACP;AACEH,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEG,MAAAA,OAAO,EAAE,CAHX;AAIEC,MAAAA,QAAQ,EAAE,CAJZ;AAKEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EALb;AAMEC,MAAAA,aAAa,EAAE;AANjB,KADO,EASP;AACET,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEG,MAAAA,OAAO,EAAE,CAHX;AAIEC,MAAAA,QAAQ,EAAE,CAJZ;AAKEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EALb;AAMEC,MAAAA,aAAa,EAAE;AANjB,KATO,EAiBP;AACET,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEG,MAAAA,OAAO,EAAE,CAHX;AAIEC,MAAAA,QAAQ,EAAE,CAJZ;AAKEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EALb;AAMEC,MAAAA,aAAa,EAAE;AANjB,KAjBO;AAnB8B,GAAD,CAAxC;AA+CAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bd,QAA3B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,OAAOP,OAA7B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACE,UAArB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACE,UAAT,CAAoBa,GAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACGf,QAAQ,CAACE,UAAT,CAAoBa,GAApB,CAAyBC,GAAD,iBACvB,QAAC,OAAD;AAAsB,MAAA,WAAW,EAAEA,GAAG,CAACb;AAAvC,OAAca,GAAG,CAACZ,EAAlB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAIE,QAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEJ,QAA5B;AAAsC,MAAA,WAAW,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7DD;;GAAMF,W;;KAAAA,W;AA+DN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\nimport Section from \"./Section\";\nimport AddSectionButton from \"./AddSectionButton\";\n\nconst TaskManager = () => {\n  const [sections, setSections] = useState({\n    sectionArr: [\n      {\n        name: \"Section 1\",\n        id: 0,\n        position: 0,\n      },\n      {\n        name: \"Section 2\",\n        id: 1,\n        position: 1,\n      },\n      {\n        name: \"Section 3\",\n        id: 2,\n        position: 2,\n      },\n    ],\n\n    taskArr: [\n      {\n        name: \"Task 1\",\n        id: 0,\n        section: 2,\n        priority: 1,\n        timestamp: new Date().getTime(),\n        executorIDArr: [],\n      },\n      {\n        name: \"Task 2\",\n        id: 1,\n        section: 0,\n        priority: 2,\n        timestamp: new Date().getTime(),\n        executorIDArr: [],\n      },\n      {\n        name: \"Task 3\",\n        id: 2,\n        section: 0,\n        priority: 2,\n        timestamp: new Date().getTime(),\n        executorIDArr: [],\n      },\n    ],\n  });\n\n  console.log(\"Sections is\", sections);\n  console.log(\"Type: \", typeof section);\n  console.log(sections.sectionArr);\n  console.log(sections.sectionArr.map);\n\n  return (\n    <div className=\"TaskManager\">\n      {sections.sectionArr.map((val) => (\n        <Section key={val.id} sectionName={val.name} />\n      ))}\n      <AddSectionButton sections={sections} setSections={setSections} />\n    </div>\n  );\n};\n\nexport default TaskManager;\n"]},"metadata":{},"sourceType":"module"}